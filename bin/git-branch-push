#! /bin/sh

usage() {
    cat << EOF
Usage:
    git branch-push [<remote-branch>]
        Pushes HEAD to the <remote-branch>. If <remote-branch> is omitted,
        it defaults to the current branch's upstream. Either way, <remote
        -branch> must exist.

    git branch-push --force <remote-branch>
        Force pushes HEAD to the <remote-branch>. <remote-branch> must be
        specified and must exist.

    git branch-push --create <remote-branch>
        Creates <remote-branch> on the remote and pushes HEAD to it.

    git branch-push --delete <remote-branch>
        Deletes <remote-branch> on the remote.
EOF
}

fail() {
    echo $@ 1>&2
    exit 1
}

case "$1" in
--force)
    forceMode="true"
    shift
    ;;
--create|-c)
    createMode="true"
    shift
    ;;
--delete|-d)
    deleteMode="true"
    shift
    ;;
--help|-h)
    usage
    exit 0
    ;;
-*)
    echo "Unrecognized option: \"$1\"" 1>&2
    usage
    exit 1
esac

if [ -z "$1" ]; then
    if [ "$forceMode" = "true" -o "$createMode" = "true" -o "$deleteMode" = "true" ]; then
        usage
        exit 1
    fi
    remoteBranch=$(git rev-parse --abbrev-ref --symbolic-full-name @{u} 2> /dev/null)
    if [ $? -ne 0 ]; then
        fail "Unable to find an upstream branch for \"$(git rev-parse --abbrev-ref HEAD)\"."
    fi
else
    remoteBranch=$1
fi

if [ -n "$2" ]; then
    usage
    exit 1
fi

remote=$(echo $remoteBranch | cut -d'/' -f1)
branch=$(echo $remoteBranch | sed "s:^$remote/::")

if [ "$remote/$branch" != "$remoteBranch" ]; then
    fail "\"$remoteBranch\" isn't in the format \"<remote>/<branch>\""
fi

if [ "$(git remote 2> /dev/null 2> /dev/null | grep $remote)" != "$remote"  ]; then
    fail "\"$remote\" doesn't appear to be a valid remote."
fi

if git show-branch $remoteBranch > /dev/null 2>&1; then
    remoteBranchExists="true"
fi

if [ "$createMode" = "true" -a "$remoteBranchExists" = "true" ]; then
    fail "Remote branch \"$remoteBranch\" already exists."
elif [ "$createMode" != "true" -a "$remoteBranchExists" != "true" ]; then
    fail "Remote branch \"$remoteBranch\" does not exist."
fi

if [ "$deleteMode" = "true" ]; then
    git push $remote --delete $branch
    exit $?
elif [ "$createMode" = "true" ]; then
    git push $remote HEAD:$branch
    exit $?
fi

headHash="$(git rev-parse HEAD)"
remoteHash="$(git rev-parse $remoteBranch)"
if [ "$headHash" = "$remoteHash" ]; then
    echo "Nothing to push."
    exit 0
fi

echo
echo "Commits to push:"
git --no-pager log --reverse --format=format:'%C(magenta)%ar %C(green)%an%Creset %s' $remoteHash..$headHash
echo
echo
echo "Files changed:"
git --no-pager diff --stat $remoteHash..$headHash
echo

if [ "$forceMode" = "true" ]; then
    git push --force $remote HEAD:$branch
else
    git push $remote HEAD:$branch
fi

exit $?
